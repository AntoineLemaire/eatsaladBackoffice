imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: doctrine_extensions.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    photos_directory: '%kernel.project_dir%/web/uploads/evaluations'

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        kernelRootDir: "%kernel.root_dir%/../web"

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }

# EasyAdmin Configuration
easy_admin:
    list:
        actions:
            - { name: 'show', icon: '', label: 'Détail' }
            - { name: 'edit', icon: 'pencil', label: '' }
            - { name: 'delete', icon: 'trash', label: '' }
    site_name: 'EatSalad'
    design:
        brand_color: '#8DC26F'
        menu:
            - { entity: 'Evaluation', label: 'Évaluations', icon: 'check-circle', default: true }
            - label: 'Questions'
              icon: 'tasks'
              children:
                  - { entity: 'Category', label: 'Catégories', icon: 'folder' }
                  - { entity: 'SubCategory', label: 'Sous-Catégories', icon: 'folder-open' }
                  - { entity: 'Question', label: 'Questions', icon: 'question' }
            - { entity: 'Answer', label: 'Réponses', icon: 'comment' }
            - { entity: 'City', label: 'Villes', icon: 'map-marker' }
            - { entity: 'Restaurant', label: 'Restaurants', icon: 'cutlery' }
            - { entity: 'User', label: 'Utilisateurs', icon: 'user'}
        assets:
            favicon: '/favicon.png'
    entities:
        User:
            label: 'Utilisateurs'
            class: AppBundle\Entity\User
            disabled_actions: ['show']
            form:
                fields:
                    - firstname
                    - lastname
                    - username
                    - email
                    - enabled
                    - lastLogin
                    # if administrators are allowed to edit users' passwords and roles, add this:
                    - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
            edit:
                fields:
                    # ...
                    - { property: 'plainPassword', type_options: { required: false} }
            list:
                fields: ['firstname', 'lastname', 'email', 'enabled', 'lastLogin', 'roles']
                form_options: { validation_groups: ['Profile'] }
                #dql_filter: "entity.roles NOT LIKE '%ROLE_ADMIN%'"

            new:
                fields:
                    # ...
                    - { property: 'plainPassword', type_options: { required: true} }
                    # ...
                form_options: { validation_groups: ['Registration'] }
        Answer:
            label: 'Réponses'
            disabled_actions: ['search', 'show']
            class: AppBundle\Entity\Answer
            list:
                fields:
                    - { property: 'id'}
                    - { property: 'answer', label: 'Réponse' }
                    - { property: 'score'}
        Question:
            label: 'Questions'
            disabled_actions: ['search', 'show']
            class: AppBundle\Entity\Question
            new:
                fields:
                    - { property: 'position', icon: 'position'}
                    - { property: 'question', icon: 'question' }
                    - { property: 'subCategory', icon: 'question', label: 'Sous catégorie' }
            edit:
                fields:
                    - { property: 'position', icon: 'position'}
                    - { property: 'question', icon: 'question' }
                    - { property: 'subCategory', icon: 'question', label: 'Sous catégorie' }
            list:
                sort: ['position', 'ASC']
                fields:
                    - { property: 'position'}
                    - { property: 'Question' }
                    - { property: 'subCategory', label: 'Sous-catégorie' }
                max_results: 500
            search:
                sort: ['position', 'ASC']

        Category:
            class: AppBundle\Entity\Category
            label: 'Categories'
            disabled_actions: ['show']
            list:
                sort: ['position', 'ASC']
                fields: ['position', 'name']
                max_results: 500
            new:
                fields: ['position', 'name']
            edit:
                fields: ['position', 'name']
        SubCategory:
            disabled_actions: ['show']
            label: 'Sous catégories'
            class: AppBundle\Entity\SubCategory
            list:
                sort: ['position', 'ASC']
                fields: ['position', 'name', 'category']
                max_results: 500
            edit:
                fields: ['position', 'name']

        Evaluation:
            label: 'Évaluations'
            class: AppBundle\Entity\Evaluation
            disabled_actions: ['new', 'edit', 'delete']
            show:
                fields: ['id', 'restaurant', { property: 'comment', label: 'Commentaire' }, { property: 'score', label: 'Score' }, { property: 'date', type: 'date', format: 'd/m/Y' }, { property: 'controllerName', label: 'Controlleur' }, { property: 'accepted', label: 'Acceptation par le franchisé', type: 'boolean' }]
                actions:
                    - { name: 'report_download', label: 'Télécharger le rapport signé', icon: 'file-text-o', type: 'route' }
                    - { name: 'statistics_download', label: 'Télécharger le rapport statistique', icon: 'bar-chart', type: 'route' }
            list:
                max_results: 500
                dql_filter: "entity.temp != 1"
                fields: ['id', 'restaurant', { property: 'comment', label: 'Commentaire' }, { property: 'score', label: 'Score' }, { property: 'date', type: 'date', format: 'd/m/Y' }, { property: 'controllerName', label: 'Controlleur' }, { property: 'accepted', label: 'Acceptation par le franchisé', type: 'boolean' }]
                actions:
                    - { label: '', name: 'report_download', icon: 'file-text-o', type: 'route' }
                    - { label: '', name: 'statistics_download', icon: 'bar-chart', type: 'route' }
        Restaurant:
            label: 'Restaurants'
            class: AppBundle\Entity\Restaurant
            list:
                max_results: 100
                fields:
                    - { property: 'id'}
                    - { property: 'name', label: 'Nom' }
                    - { property: 'address', label: 'Adresse' }
                    - { property: 'emails'}
                    - { property: 'city', label: 'Ville'}
                    - { property: 'evaluations', label: 'Évaluations', template: 'evaluations.html.twig' }
            edit:
                fields:
                    - { property: 'name', label: 'Nom'}
                    - { property: 'address', label: 'Adresse'}
                    - { property: 'emails' }
                    - { property: 'city' }
            new:
                fields:
                    - { property: 'name', label: 'Nom'}
                    - { property: 'address', label: 'Adresse'}
                    - { property: 'emails' }
                    - { property: 'city' }
        City:
            label: 'Villes'
            disabled_actions: ['search', 'show']
            class: AppBundle\Entity\City
            list:
                fields:
                    - { property: 'id'}
                    - { property: 'name', label: 'Nom' }
                    - { property: 'postcode', label: 'Code Postal' }
                    - { property: 'restaurants'}
            edit:
                fields:
                    - { property: 'name', label: 'Nom'}
                    - { property: 'postcode', label: 'Code postal' }

# Nelmio CORS Configuration
nelmio_cors:
        defaults:
            allow_credentials: false
            allow_origin: []
            allow_headers: []
            allow_methods: []
            expose_headers: []
            max_age: 0
            hosts: []
            origin_regex: false
            forced_allow_origin_value: ~
        paths:
            '^/rest/':
                allow_origin: ['*']
                allow_headers: ['X-Custom-Auth']
                allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
                max_age: 3600

# FOSRest Configuration
fos_rest:
    body_listener: true
    format_listener:
        rules:
            - { path: ^/rest, priorities: [ json ], fallback_format: json }
            - { path: ^/admin, stop: true }
            - { path: ^/login, stop: true }
            - { path: ^/logout, stop: true }
            - { path: ^/register, stop: true }

    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            json: true

stof_doctrine_extensions:
    orm:
        default:
            sortable: true
            tree: true

knp_snappy:
    temporary_folder: %kernel.cache_dir%/snappy
    pdf:
        enabled:    true
        binary:     /usr/bin/wkhtmltox/bin/wkhtmltopdf
        options:
            no-outline: true
            page-size: LETTER
            # Recommended to set UTF-8 as default encoding :)
            encoding: UTF-8
    image:
        enabled:    true
        binary:     /usr/bin/wkhtmltox/bin/wkhtmltoimage
        options:    []
